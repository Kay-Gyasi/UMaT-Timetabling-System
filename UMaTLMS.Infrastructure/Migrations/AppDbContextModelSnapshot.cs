// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using UMaTLMS.Infrastructure.Persistence;

#nullable disable

namespace UMaTLMS.Infrastructure.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("LectureSubClassGroup", b =>
                {
                    b.Property<int>("LecturesId")
                        .HasColumnType("int");

                    b.Property<int>("SubClassGroupsId")
                        .HasColumnType("int");

                    b.HasKey("LecturesId", "SubClassGroupsId");

                    b.HasIndex("SubClassGroupsId");

                    b.ToTable("LectureSubClassGroup");
                });

            modelBuilder.Entity("UMaTLMS.Core.Entities.ClassGroup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NumOfSubClasses")
                        .HasColumnType("int");

                    b.Property<int?>("Size")
                        .HasColumnType("int");

                    b.Property<int>("UmatId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("ClassGroups");
                });

            modelBuilder.Entity("UMaTLMS.Core.Entities.ClassRoom", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("Capacity")
                        .HasColumnType("int");

                    b.Property<bool>("IsLab")
                        .HasColumnType("bit");

                    b.Property<bool>("IsWorkshop")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Rooms", (string)null);
                });

            modelBuilder.Entity("UMaTLMS.Core.Entities.IncomingCourse", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CourseCategory")
                        .HasColumnType("int");

                    b.Property<int>("CourseGroup")
                        .HasColumnType("int");

                    b.Property<string>("CourseId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CourseType")
                        .HasColumnType("int");

                    b.Property<int>("Credit")
                        .HasColumnType("int");

                    b.Property<int?>("FirstExaminerStaffId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PracticalHours")
                        .HasColumnType("int");

                    b.Property<string>("ProgrammeCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ProgrammeId")
                        .HasColumnType("int");

                    b.Property<int?>("SecondExaminerStaffId")
                        .HasColumnType("int");

                    b.Property<int>("TeachingHours")
                        .HasColumnType("int");

                    b.Property<int?>("UmatId")
                        .HasColumnType("int");

                    b.Property<int?>("Year")
                        .HasColumnType("int");

                    b.Property<int?>("YearGroup")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("IncomingCourses");
                });

            modelBuilder.Entity("UMaTLMS.Core.Entities.Lecture", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CourseId")
                        .HasColumnType("int");

                    b.Property<string>("CourseNo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Duration")
                        .HasColumnType("int");

                    b.Property<bool>("IsConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("IsPractical")
                        .HasColumnType("bit");

                    b.Property<int>("LecturerId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Lectures");
                });

            modelBuilder.Entity("UMaTLMS.Core.Entities.LectureSchedule", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("DayOfWeek")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("LectureId")
                        .HasColumnType("int");

                    b.Property<int>("RoomId")
                        .HasColumnType("int");

                    b.Property<string>("TimePeriod")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("LectureId");

                    b.HasIndex("RoomId");

                    b.ToTable("Schedules");
                });

            modelBuilder.Entity("UMaTLMS.Core.Entities.Lecturer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UmatId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Lecturers");
                });

            modelBuilder.Entity("UMaTLMS.Core.Entities.OutboxMessage", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateOccurred")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateProcessed")
                        .HasColumnType("datetime2");

                    b.Property<string>("Error")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("OutboxMessages");
                });

            modelBuilder.Entity("UMaTLMS.Core.Entities.SubClassGroup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("GroupId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Size")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("GroupId");

                    b.ToTable("SubClassGroups");
                });

            modelBuilder.Entity("LectureSubClassGroup", b =>
                {
                    b.HasOne("UMaTLMS.Core.Entities.Lecture", null)
                        .WithMany()
                        .HasForeignKey("LecturesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("UMaTLMS.Core.Entities.SubClassGroup", null)
                        .WithMany()
                        .HasForeignKey("SubClassGroupsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("UMaTLMS.Core.Entities.ClassGroup", b =>
                {
                    b.OwnsOne("UMaTLMS.SharedKernel.Audit", "Audit", b1 =>
                        {
                            b1.Property<int>("ClassGroupId")
                                .HasColumnType("int");

                            b1.Property<DateTime>("CreatedAt")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("datetime2")
                                .HasDefaultValue(new DateTime(2023, 6, 3, 21, 15, 18, 155, DateTimeKind.Utc).AddTicks(2489));

                            b1.Property<string>("CreatedBy")
                                .IsRequired()
                                .ValueGeneratedOnAdd()
                                .HasColumnType("nvarchar(max)")
                                .HasDefaultValue("admin");

                            b1.Property<string>("Status")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<DateTime>("UpdatedAt")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("datetime2")
                                .HasDefaultValue(new DateTime(2023, 6, 3, 21, 15, 18, 155, DateTimeKind.Utc).AddTicks(6254));

                            b1.Property<string>("UpdatedBy")
                                .IsRequired()
                                .ValueGeneratedOnAdd()
                                .HasColumnType("nvarchar(max)")
                                .HasDefaultValue("admin");

                            b1.HasKey("ClassGroupId");

                            b1.ToTable("ClassGroups");

                            b1.WithOwner()
                                .HasForeignKey("ClassGroupId");
                        });

                    b.Navigation("Audit");
                });

            modelBuilder.Entity("UMaTLMS.Core.Entities.ClassRoom", b =>
                {
                    b.OwnsOne("UMaTLMS.SharedKernel.Audit", "Audit", b1 =>
                        {
                            b1.Property<int>("ClassRoomId")
                                .HasColumnType("int");

                            b1.Property<DateTime>("CreatedAt")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("datetime2")
                                .HasDefaultValue(new DateTime(2023, 6, 3, 21, 15, 18, 291, DateTimeKind.Utc).AddTicks(3158));

                            b1.Property<string>("CreatedBy")
                                .IsRequired()
                                .ValueGeneratedOnAdd()
                                .HasColumnType("nvarchar(max)")
                                .HasDefaultValue("admin");

                            b1.Property<string>("Status")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<DateTime>("UpdatedAt")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("datetime2")
                                .HasDefaultValue(new DateTime(2023, 6, 3, 21, 15, 18, 291, DateTimeKind.Utc).AddTicks(5080));

                            b1.Property<string>("UpdatedBy")
                                .IsRequired()
                                .ValueGeneratedOnAdd()
                                .HasColumnType("nvarchar(max)")
                                .HasDefaultValue("admin");

                            b1.HasKey("ClassRoomId");

                            b1.ToTable("Rooms");

                            b1.WithOwner()
                                .HasForeignKey("ClassRoomId");
                        });

                    b.Navigation("Audit");
                });

            modelBuilder.Entity("UMaTLMS.Core.Entities.IncomingCourse", b =>
                {
                    b.OwnsOne("UMaTLMS.Core.Contracts.AcademicPeriodResponse", "AcademicPeriod", b1 =>
                        {
                            b1.Property<int>("IncomingCourseId")
                                .HasColumnType("int");

                            b1.Property<string>("AcademicYear")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<int>("LowerYear")
                                .HasColumnType("int");

                            b1.Property<int>("Semester")
                                .HasColumnType("int");

                            b1.Property<int>("UpperYear")
                                .HasColumnType("int");

                            b1.HasKey("IncomingCourseId");

                            b1.ToTable("IncomingCourses");

                            b1.WithOwner()
                                .HasForeignKey("IncomingCourseId");
                        });

                    b.OwnsOne("UMaTLMS.SharedKernel.Audit", "Audit", b1 =>
                        {
                            b1.Property<int>("IncomingCourseId")
                                .HasColumnType("int");

                            b1.Property<DateTime>("CreatedAt")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("datetime2")
                                .HasDefaultValue(new DateTime(2023, 6, 3, 21, 15, 18, 190, DateTimeKind.Utc).AddTicks(9363));

                            b1.Property<string>("CreatedBy")
                                .IsRequired()
                                .ValueGeneratedOnAdd()
                                .HasColumnType("nvarchar(max)")
                                .HasDefaultValue("admin");

                            b1.Property<string>("Status")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<DateTime>("UpdatedAt")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("datetime2")
                                .HasDefaultValue(new DateTime(2023, 6, 3, 21, 15, 18, 191, DateTimeKind.Utc).AddTicks(3039));

                            b1.Property<string>("UpdatedBy")
                                .IsRequired()
                                .ValueGeneratedOnAdd()
                                .HasColumnType("nvarchar(max)")
                                .HasDefaultValue("admin");

                            b1.HasKey("IncomingCourseId");

                            b1.ToTable("IncomingCourses");

                            b1.WithOwner()
                                .HasForeignKey("IncomingCourseId");
                        });

                    b.Navigation("AcademicPeriod")
                        .IsRequired();

                    b.Navigation("Audit");
                });

            modelBuilder.Entity("UMaTLMS.Core.Entities.Lecture", b =>
                {
                    b.OwnsOne("UMaTLMS.SharedKernel.Audit", "Audit", b1 =>
                        {
                            b1.Property<int>("LectureId")
                                .HasColumnType("int");

                            b1.Property<DateTime>("CreatedAt")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("datetime2")
                                .HasDefaultValue(new DateTime(2023, 6, 3, 21, 15, 18, 216, DateTimeKind.Utc).AddTicks(1078));

                            b1.Property<string>("CreatedBy")
                                .IsRequired()
                                .ValueGeneratedOnAdd()
                                .HasColumnType("nvarchar(max)")
                                .HasDefaultValue("admin");

                            b1.Property<string>("Status")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<DateTime>("UpdatedAt")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("datetime2")
                                .HasDefaultValue(new DateTime(2023, 6, 3, 21, 15, 18, 216, DateTimeKind.Utc).AddTicks(5253));

                            b1.Property<string>("UpdatedBy")
                                .IsRequired()
                                .ValueGeneratedOnAdd()
                                .HasColumnType("nvarchar(max)")
                                .HasDefaultValue("admin");

                            b1.HasKey("LectureId");

                            b1.ToTable("Lectures");

                            b1.WithOwner()
                                .HasForeignKey("LectureId");
                        });

                    b.Navigation("Audit");
                });

            modelBuilder.Entity("UMaTLMS.Core.Entities.LectureSchedule", b =>
                {
                    b.HasOne("UMaTLMS.Core.Entities.Lecture", "Lecture")
                        .WithMany()
                        .HasForeignKey("LectureId");

                    b.HasOne("UMaTLMS.Core.Entities.ClassRoom", "Room")
                        .WithMany()
                        .HasForeignKey("RoomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("UMaTLMS.SharedKernel.Audit", "Audit", b1 =>
                        {
                            b1.Property<int>("LectureScheduleId")
                                .HasColumnType("int");

                            b1.Property<DateTime>("CreatedAt")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("datetime2")
                                .HasDefaultValue(new DateTime(2023, 6, 3, 21, 15, 18, 273, DateTimeKind.Utc).AddTicks(8661));

                            b1.Property<string>("CreatedBy")
                                .IsRequired()
                                .ValueGeneratedOnAdd()
                                .HasColumnType("nvarchar(max)")
                                .HasDefaultValue("admin");

                            b1.Property<string>("Status")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<DateTime>("UpdatedAt")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("datetime2")
                                .HasDefaultValue(new DateTime(2023, 6, 3, 21, 15, 18, 274, DateTimeKind.Utc).AddTicks(6685));

                            b1.Property<string>("UpdatedBy")
                                .IsRequired()
                                .ValueGeneratedOnAdd()
                                .HasColumnType("nvarchar(max)")
                                .HasDefaultValue("admin");

                            b1.HasKey("LectureScheduleId");

                            b1.ToTable("Schedules");

                            b1.WithOwner()
                                .HasForeignKey("LectureScheduleId");
                        });

                    b.Navigation("Audit");

                    b.Navigation("Lecture");

                    b.Navigation("Room");
                });

            modelBuilder.Entity("UMaTLMS.Core.Entities.Lecturer", b =>
                {
                    b.OwnsOne("UMaTLMS.SharedKernel.Audit", "Audit", b1 =>
                        {
                            b1.Property<int>("LecturerId")
                                .HasColumnType("int");

                            b1.Property<DateTime>("CreatedAt")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("datetime2")
                                .HasDefaultValue(new DateTime(2023, 6, 3, 21, 15, 18, 230, DateTimeKind.Utc).AddTicks(8875));

                            b1.Property<string>("CreatedBy")
                                .IsRequired()
                                .ValueGeneratedOnAdd()
                                .HasColumnType("nvarchar(max)")
                                .HasDefaultValue("admin");

                            b1.Property<string>("Status")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<DateTime>("UpdatedAt")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("datetime2")
                                .HasDefaultValue(new DateTime(2023, 6, 3, 21, 15, 18, 231, DateTimeKind.Utc).AddTicks(880));

                            b1.Property<string>("UpdatedBy")
                                .IsRequired()
                                .ValueGeneratedOnAdd()
                                .HasColumnType("nvarchar(max)")
                                .HasDefaultValue("admin");

                            b1.HasKey("LecturerId");

                            b1.ToTable("Lecturers");

                            b1.WithOwner()
                                .HasForeignKey("LecturerId");
                        });

                    b.Navigation("Audit");
                });

            modelBuilder.Entity("UMaTLMS.Core.Entities.SubClassGroup", b =>
                {
                    b.HasOne("UMaTLMS.Core.Entities.ClassGroup", "Group")
                        .WithMany("SubClassGroups")
                        .HasForeignKey("GroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("UMaTLMS.SharedKernel.Audit", "Audit", b1 =>
                        {
                            b1.Property<int>("SubClassGroupId")
                                .HasColumnType("int");

                            b1.Property<DateTime>("CreatedAt")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("datetime2")
                                .HasDefaultValue(new DateTime(2023, 6, 3, 21, 15, 18, 305, DateTimeKind.Utc).AddTicks(7622));

                            b1.Property<string>("CreatedBy")
                                .IsRequired()
                                .ValueGeneratedOnAdd()
                                .HasColumnType("nvarchar(max)")
                                .HasDefaultValue("admin");

                            b1.Property<string>("Status")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<DateTime>("UpdatedAt")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("datetime2")
                                .HasDefaultValue(new DateTime(2023, 6, 3, 21, 15, 18, 305, DateTimeKind.Utc).AddTicks(9308));

                            b1.Property<string>("UpdatedBy")
                                .IsRequired()
                                .ValueGeneratedOnAdd()
                                .HasColumnType("nvarchar(max)")
                                .HasDefaultValue("admin");

                            b1.HasKey("SubClassGroupId");

                            b1.ToTable("SubClassGroups");

                            b1.WithOwner()
                                .HasForeignKey("SubClassGroupId");
                        });

                    b.Navigation("Audit");

                    b.Navigation("Group");
                });

            modelBuilder.Entity("UMaTLMS.Core.Entities.ClassGroup", b =>
                {
                    b.Navigation("SubClassGroups");
                });
#pragma warning restore 612, 618
        }
    }
}
